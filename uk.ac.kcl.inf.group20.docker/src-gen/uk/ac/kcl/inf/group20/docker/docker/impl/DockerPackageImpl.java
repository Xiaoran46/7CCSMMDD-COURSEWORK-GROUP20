/**
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.inf.group20.docker.docker.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import uk.ac.kcl.inf.group20.docker.docker.AttachOption;
import uk.ac.kcl.inf.group20.docker.docker.AttachStatement;
import uk.ac.kcl.inf.group20.docker.docker.CommitOptions;
import uk.ac.kcl.inf.group20.docker.docker.CommitStatement;
import uk.ac.kcl.inf.group20.docker.docker.ContainerNameDeclaration;
import uk.ac.kcl.inf.group20.docker.docker.CpStatement;
import uk.ac.kcl.inf.group20.docker.docker.DiffStatement;
import uk.ac.kcl.inf.group20.docker.docker.DockerFactory;
import uk.ac.kcl.inf.group20.docker.docker.DockerPackage;
import uk.ac.kcl.inf.group20.docker.docker.EventOptions;
import uk.ac.kcl.inf.group20.docker.docker.EventStatement;
import uk.ac.kcl.inf.group20.docker.docker.ExecOption;
import uk.ac.kcl.inf.group20.docker.docker.ExecStatement;
import uk.ac.kcl.inf.group20.docker.docker.ExportStatement;
import uk.ac.kcl.inf.group20.docker.docker.Image;
import uk.ac.kcl.inf.group20.docker.docker.ImageOptions;
import uk.ac.kcl.inf.group20.docker.docker.ImageStatement;
import uk.ac.kcl.inf.group20.docker.docker.InspectOptions;
import uk.ac.kcl.inf.group20.docker.docker.InspectStatement;
import uk.ac.kcl.inf.group20.docker.docker.KillOption;
import uk.ac.kcl.inf.group20.docker.docker.KillStatement;
import uk.ac.kcl.inf.group20.docker.docker.LinkOption;
import uk.ac.kcl.inf.group20.docker.docker.LogOptions;
import uk.ac.kcl.inf.group20.docker.docker.LogsStatement;
import uk.ac.kcl.inf.group20.docker.docker.Model;
import uk.ac.kcl.inf.group20.docker.docker.OutType;
import uk.ac.kcl.inf.group20.docker.docker.PauseStatement;
import uk.ac.kcl.inf.group20.docker.docker.PortStatement;
import uk.ac.kcl.inf.group20.docker.docker.PsOptions;
import uk.ac.kcl.inf.group20.docker.docker.PsStatement;
import uk.ac.kcl.inf.group20.docker.docker.RemoveImageOptions;
import uk.ac.kcl.inf.group20.docker.docker.RemoveImageStatement;
import uk.ac.kcl.inf.group20.docker.docker.RemoveStatement;
import uk.ac.kcl.inf.group20.docker.docker.RestartStatement;
import uk.ac.kcl.inf.group20.docker.docker.RmOptions;
import uk.ac.kcl.inf.group20.docker.docker.RunCreateStatement;
import uk.ac.kcl.inf.group20.docker.docker.RunOption;
import uk.ac.kcl.inf.group20.docker.docker.RunorCreate;
import uk.ac.kcl.inf.group20.docker.docker.SigOption;
import uk.ac.kcl.inf.group20.docker.docker.SourceOption;
import uk.ac.kcl.inf.group20.docker.docker.StartStatement;
import uk.ac.kcl.inf.group20.docker.docker.Statements;
import uk.ac.kcl.inf.group20.docker.docker.StopStatement;
import uk.ac.kcl.inf.group20.docker.docker.UnpauseStatement;
import uk.ac.kcl.inf.group20.docker.docker.WaitStatement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DockerPackageImpl extends EPackageImpl implements DockerPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass statementsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass removeImageStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass imageStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass imageOptionsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass diffStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cpStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sourceOptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commitStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commitOptionsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass portStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exportStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass waitStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logsStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass logOptionsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eventStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eventOptionsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass attachStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inspectStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inspectOptionsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass psStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass psOptionsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass execStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unpauseStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pauseStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass restartStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stopStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass startStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass killStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass removeStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass runCreateStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass runOptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass containerNameDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum removeImageOptionsEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum linkOptionEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum sigOptionEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum attachOptionEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum execOptionEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum killOptionEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum rmOptionsEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum runorCreateEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum imageEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum outTypeEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see uk.ac.kcl.inf.group20.docker.docker.DockerPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private DockerPackageImpl()
  {
    super(eNS_URI, DockerFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link DockerPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static DockerPackage init()
  {
    if (isInited) return (DockerPackage)EPackage.Registry.INSTANCE.getEPackage(DockerPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredDockerPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    DockerPackageImpl theDockerPackage = registeredDockerPackage instanceof DockerPackageImpl ? (DockerPackageImpl)registeredDockerPackage : new DockerPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theDockerPackage.createPackageContents();

    // Initialize created meta-data
    theDockerPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theDockerPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(DockerPackage.eNS_URI, theDockerPackage);
    return theDockerPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Statements()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStatements()
  {
    return statementsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRemoveImageStatement()
  {
    return removeImageStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRemoveImageStatement_RemoveimageOptions()
  {
    return (EAttribute)removeImageStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRemoveImageStatement_Image()
  {
    return (EAttribute)removeImageStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getImageStatement()
  {
    return imageStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getImageStatement_ImageOptions()
  {
    return (EReference)imageStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getImageStatement_Repository()
  {
    return (EAttribute)imageStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getImageOptions()
  {
    return imageOptionsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getImageOptions_Option()
  {
    return (EAttribute)imageOptionsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getImageOptions_Condition()
  {
    return (EAttribute)imageOptionsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getImageOptions_Formats()
  {
    return (EAttribute)imageOptionsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDiffStatement()
  {
    return diffStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDiffStatement_ContainerName()
  {
    return (EReference)diffStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCpStatement()
  {
    return cpStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCpStatement_Link()
  {
    return (EAttribute)cpStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCpStatement_Source()
  {
    return (EReference)cpStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCpStatement_Destination()
  {
    return (EAttribute)cpStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSourceOption()
  {
    return sourceOptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSourceOption_Option1()
  {
    return (EAttribute)sourceOptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSourceOption_Option2()
  {
    return (EReference)sourceOptionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCommitStatement()
  {
    return commitStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommitStatement_CommitOptions()
  {
    return (EReference)commitStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCommitStatement_ContainerName()
  {
    return (EReference)commitStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCommitStatement_Repository()
  {
    return (EAttribute)commitStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCommitOptions()
  {
    return commitOptionsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCommitOptions_Option()
  {
    return (EAttribute)commitOptionsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCommitOptions_Author()
  {
    return (EAttribute)commitOptionsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCommitOptions_Description()
  {
    return (EAttribute)commitOptionsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPortStatement()
  {
    return portStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPortStatement_ContainerName()
  {
    return (EReference)portStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPortStatement_Private_port()
  {
    return (EAttribute)portStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExportStatement()
  {
    return exportStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExportStatement_File_path()
  {
    return (EAttribute)exportStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExportStatement_ContainerName()
  {
    return (EReference)exportStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWaitStatement()
  {
    return waitStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWaitStatement_ContainerName()
  {
    return (EReference)waitStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogsStatement()
  {
    return logsStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogsStatement_LogOptions()
  {
    return (EReference)logsStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLogsStatement_ContainerName()
  {
    return (EReference)logsStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLogOptions()
  {
    return logOptionsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogOptions_Option()
  {
    return (EAttribute)logOptionsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogOptions_Time()
  {
    return (EAttribute)logOptionsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLogOptions_Number()
  {
    return (EAttribute)logOptionsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEventStatement()
  {
    return eventStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEventStatement_EventOptions()
  {
    return (EReference)eventStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEventOptions()
  {
    return eventOptionsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEventOptions_Option()
  {
    return (EAttribute)eventOptionsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEventOptions_Commands()
  {
    return (EAttribute)eventOptionsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEventOptions_TimeS()
  {
    return (EAttribute)eventOptionsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEventOptions_TimeU()
  {
    return (EAttribute)eventOptionsEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAttachStatement()
  {
    return attachStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAttachStatement_AttachOption()
  {
    return (EAttribute)attachStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAttachStatement_ContainerName()
  {
    return (EReference)attachStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInspectStatement()
  {
    return inspectStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInspectStatement_InspectOptions()
  {
    return (EReference)inspectStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInspectOptions()
  {
    return inspectOptionsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInspectOptions_Option()
  {
    return (EAttribute)inspectOptionsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInspectOptions_Formats()
  {
    return (EAttribute)inspectOptionsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInspectOptions_Types()
  {
    return (EAttribute)inspectOptionsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPsStatement()
  {
    return psStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPsStatement_PsOptions()
  {
    return (EReference)psStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPsOptions()
  {
    return psOptionsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPsOptions_Option()
  {
    return (EAttribute)psOptionsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPsOptions_Commands()
  {
    return (EAttribute)psOptionsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPsOptions_Formats()
  {
    return (EAttribute)psOptionsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPsOptions_N()
  {
    return (EAttribute)psOptionsEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExecStatement()
  {
    return execStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExecStatement_ExecOptions()
  {
    return (EAttribute)execStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExecStatement_ContainerName()
  {
    return (EReference)execStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExecStatement_Commands()
  {
    return (EAttribute)execStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUnpauseStatement()
  {
    return unpauseStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUnpauseStatement_ContainerName()
  {
    return (EReference)unpauseStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPauseStatement()
  {
    return pauseStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPauseStatement_ContainerName()
  {
    return (EReference)pauseStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRestartStatement()
  {
    return restartStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRestartStatement_ContainerName()
  {
    return (EReference)restartStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStopStatement()
  {
    return stopStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStopStatement_ContainerName()
  {
    return (EReference)stopStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStartStatement()
  {
    return startStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStartStatement_ContainerName()
  {
    return (EReference)startStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getKillStatement()
  {
    return killStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getKillStatement_Kill()
  {
    return (EAttribute)killStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getKillStatement_ContainerName()
  {
    return (EReference)killStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRemoveStatement()
  {
    return removeStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRemoveStatement_RmOptions()
  {
    return (EAttribute)removeStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRemoveStatement_ContainerName()
  {
    return (EReference)removeStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRunCreateStatement()
  {
    return runCreateStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRunCreateStatement_Order()
  {
    return (EAttribute)runCreateStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRunCreateStatement_RunOptions()
  {
    return (EReference)runCreateStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRunCreateStatement_Image()
  {
    return (EAttribute)runCreateStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRunCreateStatement_Commands()
  {
    return (EAttribute)runCreateStatementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRunOption()
  {
    return runOptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRunOption_Condition()
  {
    return (EAttribute)runOptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRunOption_OutType()
  {
    return (EAttribute)runOptionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRunOption_PortName()
  {
    return (EAttribute)runOptionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRunOption_Server()
  {
    return (EAttribute)runOptionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRunOption_DomainName()
  {
    return (EAttribute)runOptionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRunOption_Hostname()
  {
    return (EAttribute)runOptionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRunOption_EnvironmentVariable()
  {
    return (EAttribute)runOptionEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRunOption_SetEnvironmentVariable()
  {
    return (EAttribute)runOptionEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRunOption_ConnectType()
  {
    return (EAttribute)runOptionEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRunOption_ContainerName()
  {
    return (EReference)runOptionEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContainerNameDeclaration()
  {
    return containerNameDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContainerNameDeclaration_Name()
  {
    return (EAttribute)containerNameDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getRemoveImageOptions()
  {
    return removeImageOptionsEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getLinkOption()
  {
    return linkOptionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getSigOption()
  {
    return sigOptionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getAttachOption()
  {
    return attachOptionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getExecOption()
  {
    return execOptionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getKillOption()
  {
    return killOptionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getRmOptions()
  {
    return rmOptionsEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getRunorCreate()
  {
    return runorCreateEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getImage()
  {
    return imageEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getOutType()
  {
    return outTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DockerFactory getDockerFactory()
  {
    return (DockerFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__STATEMENTS);

    statementsEClass = createEClass(STATEMENTS);

    removeImageStatementEClass = createEClass(REMOVE_IMAGE_STATEMENT);
    createEAttribute(removeImageStatementEClass, REMOVE_IMAGE_STATEMENT__REMOVEIMAGE_OPTIONS);
    createEAttribute(removeImageStatementEClass, REMOVE_IMAGE_STATEMENT__IMAGE);

    imageStatementEClass = createEClass(IMAGE_STATEMENT);
    createEReference(imageStatementEClass, IMAGE_STATEMENT__IMAGE_OPTIONS);
    createEAttribute(imageStatementEClass, IMAGE_STATEMENT__REPOSITORY);

    imageOptionsEClass = createEClass(IMAGE_OPTIONS);
    createEAttribute(imageOptionsEClass, IMAGE_OPTIONS__OPTION);
    createEAttribute(imageOptionsEClass, IMAGE_OPTIONS__CONDITION);
    createEAttribute(imageOptionsEClass, IMAGE_OPTIONS__FORMATS);

    diffStatementEClass = createEClass(DIFF_STATEMENT);
    createEReference(diffStatementEClass, DIFF_STATEMENT__CONTAINER_NAME);

    cpStatementEClass = createEClass(CP_STATEMENT);
    createEAttribute(cpStatementEClass, CP_STATEMENT__LINK);
    createEReference(cpStatementEClass, CP_STATEMENT__SOURCE);
    createEAttribute(cpStatementEClass, CP_STATEMENT__DESTINATION);

    sourceOptionEClass = createEClass(SOURCE_OPTION);
    createEAttribute(sourceOptionEClass, SOURCE_OPTION__OPTION1);
    createEReference(sourceOptionEClass, SOURCE_OPTION__OPTION2);

    commitStatementEClass = createEClass(COMMIT_STATEMENT);
    createEReference(commitStatementEClass, COMMIT_STATEMENT__COMMIT_OPTIONS);
    createEReference(commitStatementEClass, COMMIT_STATEMENT__CONTAINER_NAME);
    createEAttribute(commitStatementEClass, COMMIT_STATEMENT__REPOSITORY);

    commitOptionsEClass = createEClass(COMMIT_OPTIONS);
    createEAttribute(commitOptionsEClass, COMMIT_OPTIONS__OPTION);
    createEAttribute(commitOptionsEClass, COMMIT_OPTIONS__AUTHOR);
    createEAttribute(commitOptionsEClass, COMMIT_OPTIONS__DESCRIPTION);

    portStatementEClass = createEClass(PORT_STATEMENT);
    createEReference(portStatementEClass, PORT_STATEMENT__CONTAINER_NAME);
    createEAttribute(portStatementEClass, PORT_STATEMENT__PRIVATE_PORT);

    exportStatementEClass = createEClass(EXPORT_STATEMENT);
    createEAttribute(exportStatementEClass, EXPORT_STATEMENT__FILE_PATH);
    createEReference(exportStatementEClass, EXPORT_STATEMENT__CONTAINER_NAME);

    waitStatementEClass = createEClass(WAIT_STATEMENT);
    createEReference(waitStatementEClass, WAIT_STATEMENT__CONTAINER_NAME);

    logsStatementEClass = createEClass(LOGS_STATEMENT);
    createEReference(logsStatementEClass, LOGS_STATEMENT__LOG_OPTIONS);
    createEReference(logsStatementEClass, LOGS_STATEMENT__CONTAINER_NAME);

    logOptionsEClass = createEClass(LOG_OPTIONS);
    createEAttribute(logOptionsEClass, LOG_OPTIONS__OPTION);
    createEAttribute(logOptionsEClass, LOG_OPTIONS__TIME);
    createEAttribute(logOptionsEClass, LOG_OPTIONS__NUMBER);

    eventStatementEClass = createEClass(EVENT_STATEMENT);
    createEReference(eventStatementEClass, EVENT_STATEMENT__EVENT_OPTIONS);

    eventOptionsEClass = createEClass(EVENT_OPTIONS);
    createEAttribute(eventOptionsEClass, EVENT_OPTIONS__OPTION);
    createEAttribute(eventOptionsEClass, EVENT_OPTIONS__COMMANDS);
    createEAttribute(eventOptionsEClass, EVENT_OPTIONS__TIME_S);
    createEAttribute(eventOptionsEClass, EVENT_OPTIONS__TIME_U);

    attachStatementEClass = createEClass(ATTACH_STATEMENT);
    createEAttribute(attachStatementEClass, ATTACH_STATEMENT__ATTACH_OPTION);
    createEReference(attachStatementEClass, ATTACH_STATEMENT__CONTAINER_NAME);

    inspectStatementEClass = createEClass(INSPECT_STATEMENT);
    createEReference(inspectStatementEClass, INSPECT_STATEMENT__INSPECT_OPTIONS);

    inspectOptionsEClass = createEClass(INSPECT_OPTIONS);
    createEAttribute(inspectOptionsEClass, INSPECT_OPTIONS__OPTION);
    createEAttribute(inspectOptionsEClass, INSPECT_OPTIONS__FORMATS);
    createEAttribute(inspectOptionsEClass, INSPECT_OPTIONS__TYPES);

    psStatementEClass = createEClass(PS_STATEMENT);
    createEReference(psStatementEClass, PS_STATEMENT__PS_OPTIONS);

    psOptionsEClass = createEClass(PS_OPTIONS);
    createEAttribute(psOptionsEClass, PS_OPTIONS__OPTION);
    createEAttribute(psOptionsEClass, PS_OPTIONS__COMMANDS);
    createEAttribute(psOptionsEClass, PS_OPTIONS__FORMATS);
    createEAttribute(psOptionsEClass, PS_OPTIONS__N);

    execStatementEClass = createEClass(EXEC_STATEMENT);
    createEAttribute(execStatementEClass, EXEC_STATEMENT__EXEC_OPTIONS);
    createEReference(execStatementEClass, EXEC_STATEMENT__CONTAINER_NAME);
    createEAttribute(execStatementEClass, EXEC_STATEMENT__COMMANDS);

    unpauseStatementEClass = createEClass(UNPAUSE_STATEMENT);
    createEReference(unpauseStatementEClass, UNPAUSE_STATEMENT__CONTAINER_NAME);

    pauseStatementEClass = createEClass(PAUSE_STATEMENT);
    createEReference(pauseStatementEClass, PAUSE_STATEMENT__CONTAINER_NAME);

    restartStatementEClass = createEClass(RESTART_STATEMENT);
    createEReference(restartStatementEClass, RESTART_STATEMENT__CONTAINER_NAME);

    stopStatementEClass = createEClass(STOP_STATEMENT);
    createEReference(stopStatementEClass, STOP_STATEMENT__CONTAINER_NAME);

    startStatementEClass = createEClass(START_STATEMENT);
    createEReference(startStatementEClass, START_STATEMENT__CONTAINER_NAME);

    killStatementEClass = createEClass(KILL_STATEMENT);
    createEAttribute(killStatementEClass, KILL_STATEMENT__KILL);
    createEReference(killStatementEClass, KILL_STATEMENT__CONTAINER_NAME);

    removeStatementEClass = createEClass(REMOVE_STATEMENT);
    createEAttribute(removeStatementEClass, REMOVE_STATEMENT__RM_OPTIONS);
    createEReference(removeStatementEClass, REMOVE_STATEMENT__CONTAINER_NAME);

    runCreateStatementEClass = createEClass(RUN_CREATE_STATEMENT);
    createEAttribute(runCreateStatementEClass, RUN_CREATE_STATEMENT__ORDER);
    createEReference(runCreateStatementEClass, RUN_CREATE_STATEMENT__RUN_OPTIONS);
    createEAttribute(runCreateStatementEClass, RUN_CREATE_STATEMENT__IMAGE);
    createEAttribute(runCreateStatementEClass, RUN_CREATE_STATEMENT__COMMANDS);

    runOptionEClass = createEClass(RUN_OPTION);
    createEAttribute(runOptionEClass, RUN_OPTION__CONDITION);
    createEAttribute(runOptionEClass, RUN_OPTION__OUT_TYPE);
    createEAttribute(runOptionEClass, RUN_OPTION__PORT_NAME);
    createEAttribute(runOptionEClass, RUN_OPTION__SERVER);
    createEAttribute(runOptionEClass, RUN_OPTION__DOMAIN_NAME);
    createEAttribute(runOptionEClass, RUN_OPTION__HOSTNAME);
    createEAttribute(runOptionEClass, RUN_OPTION__ENVIRONMENT_VARIABLE);
    createEAttribute(runOptionEClass, RUN_OPTION__SET_ENVIRONMENT_VARIABLE);
    createEAttribute(runOptionEClass, RUN_OPTION__CONNECT_TYPE);
    createEReference(runOptionEClass, RUN_OPTION__CONTAINER_NAME);

    containerNameDeclarationEClass = createEClass(CONTAINER_NAME_DECLARATION);
    createEAttribute(containerNameDeclarationEClass, CONTAINER_NAME_DECLARATION__NAME);

    // Create enums
    removeImageOptionsEEnum = createEEnum(REMOVE_IMAGE_OPTIONS);
    linkOptionEEnum = createEEnum(LINK_OPTION);
    sigOptionEEnum = createEEnum(SIG_OPTION);
    attachOptionEEnum = createEEnum(ATTACH_OPTION);
    execOptionEEnum = createEEnum(EXEC_OPTION);
    killOptionEEnum = createEEnum(KILL_OPTION);
    rmOptionsEEnum = createEEnum(RM_OPTIONS);
    runorCreateEEnum = createEEnum(RUNOR_CREATE);
    imageEEnum = createEEnum(IMAGE);
    outTypeEEnum = createEEnum(OUT_TYPE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    removeImageStatementEClass.getESuperTypes().add(this.getStatements());
    imageStatementEClass.getESuperTypes().add(this.getStatements());
    diffStatementEClass.getESuperTypes().add(this.getStatements());
    cpStatementEClass.getESuperTypes().add(this.getStatements());
    commitStatementEClass.getESuperTypes().add(this.getStatements());
    portStatementEClass.getESuperTypes().add(this.getStatements());
    exportStatementEClass.getESuperTypes().add(this.getStatements());
    waitStatementEClass.getESuperTypes().add(this.getStatements());
    logsStatementEClass.getESuperTypes().add(this.getStatements());
    eventStatementEClass.getESuperTypes().add(this.getStatements());
    attachStatementEClass.getESuperTypes().add(this.getStatements());
    inspectStatementEClass.getESuperTypes().add(this.getStatements());
    psStatementEClass.getESuperTypes().add(this.getStatements());
    execStatementEClass.getESuperTypes().add(this.getStatements());
    unpauseStatementEClass.getESuperTypes().add(this.getStatements());
    pauseStatementEClass.getESuperTypes().add(this.getStatements());
    restartStatementEClass.getESuperTypes().add(this.getStatements());
    stopStatementEClass.getESuperTypes().add(this.getStatements());
    startStatementEClass.getESuperTypes().add(this.getStatements());
    killStatementEClass.getESuperTypes().add(this.getStatements());
    removeStatementEClass.getESuperTypes().add(this.getStatements());
    runCreateStatementEClass.getESuperTypes().add(this.getStatements());
    containerNameDeclarationEClass.getESuperTypes().add(this.getStatements());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_Statements(), this.getStatements(), null, "statements", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(statementsEClass, Statements.class, "Statements", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(removeImageStatementEClass, RemoveImageStatement.class, "RemoveImageStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRemoveImageStatement_RemoveimageOptions(), this.getRemoveImageOptions(), "removeimageOptions", null, 0, -1, RemoveImageStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRemoveImageStatement_Image(), ecorePackage.getEString(), "image", null, 0, 1, RemoveImageStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(imageStatementEClass, ImageStatement.class, "ImageStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getImageStatement_ImageOptions(), this.getImageOptions(), null, "imageOptions", null, 0, -1, ImageStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getImageStatement_Repository(), ecorePackage.getEString(), "repository", null, 0, 1, ImageStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(imageOptionsEClass, ImageOptions.class, "ImageOptions", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getImageOptions_Option(), ecorePackage.getEString(), "option", null, 0, 1, ImageOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getImageOptions_Condition(), ecorePackage.getEString(), "condition", null, 0, 1, ImageOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getImageOptions_Formats(), ecorePackage.getEString(), "formats", null, 0, 1, ImageOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(diffStatementEClass, DiffStatement.class, "DiffStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDiffStatement_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, DiffStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cpStatementEClass, CpStatement.class, "CpStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCpStatement_Link(), this.getLinkOption(), "link", null, 0, 1, CpStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCpStatement_Source(), this.getSourceOption(), null, "source", null, 0, 1, CpStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCpStatement_Destination(), ecorePackage.getEString(), "destination", null, 0, 1, CpStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sourceOptionEClass, SourceOption.class, "SourceOption", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSourceOption_Option1(), ecorePackage.getEString(), "option1", null, 0, 1, SourceOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSourceOption_Option2(), this.getContainerNameDeclaration(), null, "option2", null, 0, 1, SourceOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(commitStatementEClass, CommitStatement.class, "CommitStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCommitStatement_CommitOptions(), this.getCommitOptions(), null, "commitOptions", null, 0, -1, CommitStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCommitStatement_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, CommitStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCommitStatement_Repository(), ecorePackage.getEString(), "repository", null, 0, 1, CommitStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(commitOptionsEClass, CommitOptions.class, "CommitOptions", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCommitOptions_Option(), ecorePackage.getEString(), "option", null, 0, 1, CommitOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCommitOptions_Author(), ecorePackage.getEString(), "author", null, 0, 1, CommitOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCommitOptions_Description(), ecorePackage.getEString(), "description", null, 0, 1, CommitOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(portStatementEClass, PortStatement.class, "PortStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPortStatement_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, PortStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPortStatement_Private_port(), ecorePackage.getEString(), "private_port", null, 0, 1, PortStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exportStatementEClass, ExportStatement.class, "ExportStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExportStatement_File_path(), ecorePackage.getEString(), "file_path", null, 0, 1, ExportStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExportStatement_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, ExportStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(waitStatementEClass, WaitStatement.class, "WaitStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getWaitStatement_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, WaitStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logsStatementEClass, LogsStatement.class, "LogsStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLogsStatement_LogOptions(), this.getLogOptions(), null, "logOptions", null, 0, -1, LogsStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLogsStatement_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, LogsStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(logOptionsEClass, LogOptions.class, "LogOptions", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLogOptions_Option(), ecorePackage.getEString(), "option", null, 0, 1, LogOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogOptions_Time(), ecorePackage.getEString(), "time", null, 0, 1, LogOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLogOptions_Number(), ecorePackage.getEInt(), "number", null, 0, 1, LogOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eventStatementEClass, EventStatement.class, "EventStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEventStatement_EventOptions(), this.getEventOptions(), null, "eventOptions", null, 0, -1, EventStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eventOptionsEClass, EventOptions.class, "EventOptions", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEventOptions_Option(), ecorePackage.getEString(), "option", null, 0, 1, EventOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEventOptions_Commands(), ecorePackage.getEString(), "commands", null, 0, 1, EventOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEventOptions_TimeS(), ecorePackage.getEString(), "timeS", null, 0, 1, EventOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEventOptions_TimeU(), ecorePackage.getEString(), "timeU", null, 0, 1, EventOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(attachStatementEClass, AttachStatement.class, "AttachStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAttachStatement_AttachOption(), this.getAttachOption(), "attachOption", null, 0, 1, AttachStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAttachStatement_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, AttachStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(inspectStatementEClass, InspectStatement.class, "InspectStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInspectStatement_InspectOptions(), this.getInspectOptions(), null, "inspectOptions", null, 0, -1, InspectStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(inspectOptionsEClass, InspectOptions.class, "InspectOptions", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getInspectOptions_Option(), ecorePackage.getEString(), "option", null, 0, 1, InspectOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInspectOptions_Formats(), ecorePackage.getEString(), "formats", null, 0, 1, InspectOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInspectOptions_Types(), ecorePackage.getEString(), "types", null, 0, 1, InspectOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(psStatementEClass, PsStatement.class, "PsStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPsStatement_PsOptions(), this.getPsOptions(), null, "psOptions", null, 0, -1, PsStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(psOptionsEClass, PsOptions.class, "PsOptions", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPsOptions_Option(), ecorePackage.getEString(), "option", null, 0, 1, PsOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPsOptions_Commands(), ecorePackage.getEString(), "commands", null, 0, 1, PsOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPsOptions_Formats(), ecorePackage.getEString(), "formats", null, 0, 1, PsOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPsOptions_N(), ecorePackage.getEInt(), "n", null, 0, 1, PsOptions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(execStatementEClass, ExecStatement.class, "ExecStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExecStatement_ExecOptions(), this.getExecOption(), "execOptions", null, 0, -1, ExecStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExecStatement_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, ExecStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getExecStatement_Commands(), ecorePackage.getEString(), "commands", null, 0, 1, ExecStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(unpauseStatementEClass, UnpauseStatement.class, "UnpauseStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getUnpauseStatement_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, UnpauseStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pauseStatementEClass, PauseStatement.class, "PauseStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPauseStatement_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, PauseStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(restartStatementEClass, RestartStatement.class, "RestartStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRestartStatement_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, RestartStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stopStatementEClass, StopStatement.class, "StopStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getStopStatement_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, StopStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(startStatementEClass, StartStatement.class, "StartStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getStartStatement_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, StartStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(killStatementEClass, KillStatement.class, "KillStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getKillStatement_Kill(), this.getKillOption(), "kill", null, 0, 1, KillStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getKillStatement_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, KillStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(removeStatementEClass, RemoveStatement.class, "RemoveStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRemoveStatement_RmOptions(), this.getRmOptions(), "rmOptions", null, 0, 1, RemoveStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRemoveStatement_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, RemoveStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(runCreateStatementEClass, RunCreateStatement.class, "RunCreateStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRunCreateStatement_Order(), this.getRunorCreate(), "order", null, 0, 1, RunCreateStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRunCreateStatement_RunOptions(), this.getRunOption(), null, "runOptions", null, 0, -1, RunCreateStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRunCreateStatement_Image(), this.getImage(), "image", null, 0, 1, RunCreateStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRunCreateStatement_Commands(), ecorePackage.getEString(), "commands", null, 0, 1, RunCreateStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(runOptionEClass, RunOption.class, "RunOption", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRunOption_Condition(), ecorePackage.getEString(), "condition", null, 0, 1, RunOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRunOption_OutType(), this.getOutType(), "outType", null, 0, 1, RunOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRunOption_PortName(), ecorePackage.getEString(), "portName", null, 0, 1, RunOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRunOption_Server(), ecorePackage.getEString(), "server", null, 0, 1, RunOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRunOption_DomainName(), ecorePackage.getEString(), "domainName", null, 0, 1, RunOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRunOption_Hostname(), ecorePackage.getEString(), "hostname", null, 0, 1, RunOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRunOption_EnvironmentVariable(), ecorePackage.getEString(), "environmentVariable", null, 0, 1, RunOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRunOption_SetEnvironmentVariable(), ecorePackage.getEString(), "setEnvironmentVariable", null, 0, 1, RunOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRunOption_ConnectType(), ecorePackage.getEString(), "connectType", null, 0, 1, RunOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRunOption_ContainerName(), this.getContainerNameDeclaration(), null, "containerName", null, 0, 1, RunOption.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(containerNameDeclarationEClass, ContainerNameDeclaration.class, "ContainerNameDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getContainerNameDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, ContainerNameDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(removeImageOptionsEEnum, RemoveImageOptions.class, "RemoveImageOptions");
    addEEnumLiteral(removeImageOptionsEEnum, RemoveImageOptions.FORCE);
    addEEnumLiteral(removeImageOptionsEEnum, RemoveImageOptions.NO_REMOVE_PROCESS_IMAGE);

    initEEnum(linkOptionEEnum, LinkOption.class, "LinkOption");
    addEEnumLiteral(linkOptionEEnum, LinkOption.NO_MAINTAIN_LINK);
    addEEnumLiteral(linkOptionEEnum, LinkOption.MAINTAIN_LINK);

    initEEnum(sigOptionEEnum, SigOption.class, "SigOption");
    addEEnumLiteral(sigOptionEEnum, SigOption.FALSE);
    addEEnumLiteral(sigOptionEEnum, SigOption.TRUE);

    initEEnum(attachOptionEEnum, AttachOption.class, "AttachOption");
    addEEnumLiteral(attachOptionEEnum, AttachOption.DETACH_KEYS);
    addEEnumLiteral(attachOptionEEnum, AttachOption.NO_STDIN);
    addEEnumLiteral(attachOptionEEnum, AttachOption.SIG_PROXY_TRUE);
    addEEnumLiteral(attachOptionEEnum, AttachOption.SIG_PROXY_FALSE);

    initEEnum(execOptionEEnum, ExecOption.class, "ExecOption");
    addEEnumLiteral(execOptionEEnum, ExecOption.BACKSTAGE);
    addEEnumLiteral(execOptionEEnum, ExecOption.OPEN_STDIN);
    addEEnumLiteral(execOptionEEnum, ExecOption.TERMINATE);

    initEEnum(killOptionEEnum, KillOption.class, "KillOption");
    addEEnumLiteral(killOptionEEnum, KillOption.KILL);
    addEEnumLiteral(killOptionEEnum, KillOption.KILL_SIGN);

    initEEnum(rmOptionsEEnum, RmOptions.class, "RmOptions");
    addEEnumLiteral(rmOptionsEEnum, RmOptions.NO_OPTION);
    addEEnumLiteral(rmOptionsEEnum, RmOptions.FORCE);
    addEEnumLiteral(rmOptionsEEnum, RmOptions.DELETE_LINK);
    addEEnumLiteral(rmOptionsEEnum, RmOptions.DELETE_VOLUME);

    initEEnum(runorCreateEEnum, RunorCreate.class, "RunorCreate");
    addEEnumLiteral(runorCreateEEnum, RunorCreate.RUN);
    addEEnumLiteral(runorCreateEEnum, RunorCreate.CREATE);

    initEEnum(imageEEnum, Image.class, "Image");
    addEEnumLiteral(imageEEnum, Image.UBUNTU);
    addEEnumLiteral(imageEEnum, Image.CENTOS);
    addEEnumLiteral(imageEEnum, Image.NGINX);
    addEEnumLiteral(imageEEnum, Image.PHP);
    addEEnumLiteral(imageEEnum, Image.APACHE);

    initEEnum(outTypeEEnum, OutType.class, "OutType");
    addEEnumLiteral(outTypeEEnum, OutType.IN);
    addEEnumLiteral(outTypeEEnum, OutType.OUT);
    addEEnumLiteral(outTypeEEnum, OutType.ERR);

    // Create resource
    createResource(eNS_URI);
  }

} //DockerPackageImpl
