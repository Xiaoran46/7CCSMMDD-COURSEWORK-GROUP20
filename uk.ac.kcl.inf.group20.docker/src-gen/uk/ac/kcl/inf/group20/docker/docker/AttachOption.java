/**
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.inf.group20.docker.docker;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Attach Option</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see uk.ac.kcl.inf.group20.docker.docker.DockerPackage#getAttachOption()
 * @model
 * @generated
 */
public enum AttachOption implements Enumerator
{
  /**
   * The '<em><b>Detach keys</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DETACH_KEYS_VALUE
   * @generated
   * @ordered
   */
  DETACH_KEYS(0, "detach_keys", "detach_keys"),

  /**
   * The '<em><b>No stdin</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #NO_STDIN_VALUE
   * @generated
   * @ordered
   */
  NO_STDIN(1, "no_stdin", "no_stdin"),

  /**
   * The '<em><b>Sig proxy true</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SIG_PROXY_TRUE_VALUE
   * @generated
   * @ordered
   */
  SIG_PROXY_TRUE(2, "sig_proxy_true", "sig_proxy_true"),

  /**
   * The '<em><b>Sig proxy false</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SIG_PROXY_FALSE_VALUE
   * @generated
   * @ordered
   */
  SIG_PROXY_FALSE(3, "sig_proxy_false", "sig_proxy_false");

  /**
   * The '<em><b>Detach keys</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DETACH_KEYS
   * @model name="detach_keys"
   * @generated
   * @ordered
   */
  public static final int DETACH_KEYS_VALUE = 0;

  /**
   * The '<em><b>No stdin</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #NO_STDIN
   * @model name="no_stdin"
   * @generated
   * @ordered
   */
  public static final int NO_STDIN_VALUE = 1;

  /**
   * The '<em><b>Sig proxy true</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SIG_PROXY_TRUE
   * @model name="sig_proxy_true"
   * @generated
   * @ordered
   */
  public static final int SIG_PROXY_TRUE_VALUE = 2;

  /**
   * The '<em><b>Sig proxy false</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SIG_PROXY_FALSE
   * @model name="sig_proxy_false"
   * @generated
   * @ordered
   */
  public static final int SIG_PROXY_FALSE_VALUE = 3;

  /**
   * An array of all the '<em><b>Attach Option</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final AttachOption[] VALUES_ARRAY =
    new AttachOption[]
    {
      DETACH_KEYS,
      NO_STDIN,
      SIG_PROXY_TRUE,
      SIG_PROXY_FALSE,
    };

  /**
   * A public read-only list of all the '<em><b>Attach Option</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<AttachOption> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Attach Option</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static AttachOption get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      AttachOption result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Attach Option</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static AttachOption getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      AttachOption result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Attach Option</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static AttachOption get(int value)
  {
    switch (value)
    {
      case DETACH_KEYS_VALUE: return DETACH_KEYS;
      case NO_STDIN_VALUE: return NO_STDIN;
      case SIG_PROXY_TRUE_VALUE: return SIG_PROXY_TRUE;
      case SIG_PROXY_FALSE_VALUE: return SIG_PROXY_FALSE;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private AttachOption(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //AttachOption
